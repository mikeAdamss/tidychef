Traceback (most recent call last):
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
codes = table.excel_ref("B5:H5").label_as("Codes")
years = table.excel_ref("C7:C10").label_as("Years")
preview(codes, years, bounded="A4:H10")
waffled_selection = years.waffle(right, codes)
------------------


[31m---------------------------------------------------------------------------[39m
[31mAmbiguousWaffleError[39m                      Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 4[39m
[32m      2[39m years = table.excel_ref([33m"[39m[33mC7:C10[39m[33m"[39m).label_as([33m"[39m[33mYears[39m[33m"[39m)
[32m      3[39m preview(codes, years, bounded=[33m"[39m[33mA4:H10[39m[33m"[39m)
[32m----> [39m[32m4[39m waffled_selection = [43myears[49m[43m.[49m[43mwaffle[49m[43m([49m[43mright[49m[43m,[49m[43m [49m[43mcodes[49m[43m)[49m

[36mFile [39m[32m~/.pyenv/versions/3.12.11/lib/python3.12/site-packages/tidychef/utils/decorators/dontmutate.py:24[39m, in [36mdontmutate.<locals>.wrapper[39m[34m(self, *args, **kwargs)[39m
[32m     21[39m [38;5;129m@wraps[39m(method)
[32m     22[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mwrapper[39m([38;5;28mself[39m, *args, **kwargs):
[32m     23[39m     [38;5;28mself[39m = copy.deepcopy([38;5;28mself[39m)
[32m---> [39m[32m24[39m     [38;5;28;01mreturn[39;00m [43mmethod[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/.pyenv/versions/3.12.11/lib/python3.12/site-packages/tidychef/selection/selectable.py:537[39m, in [36mSelectable.waffle[39m[34m(self, direction, additional_selection)[39m
[32m    535[39m     highest_x = dfc.maximum_x_offset([38;5;28mself[39m.cells)
[32m    536[39m     [38;5;28;01mif[39;00m [38;5;28many[39m([x [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m additional_selection [38;5;28;01mif[39;00m x.x <= highest_x]):
[32m--> [39m[32m537[39m         [38;5;28;01mraise[39;00m AmbiguousWaffleError(
[32m    538[39m             [33m"[39m[33mWhen using waffle right, your additional selections must all [39m[33m"[39m
[32m    539[39m             [33m"[39m[33mbe right of your initial selections.[39m[33m"[39m
[32m    540[39m         )
[32m    541[39m [38;5;28;01mif[39;00m direction.is_left:
[32m    542[39m     lowest_x = dfc.minimum_x_offset([38;5;28mself[39m.cells)

[31mAmbiguousWaffleError[39m: When using waffle right, your additional selections must all be right of your initial selections.

