Traceback (most recent call last):
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/user/.pyenv/versions/3.12.11/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from typing import Dict

from tidychef import acquire, preview
from tidychef.direction import right, down, left, up
from tidychef.output import TidyData, Column
from tidychef.selection import CsvSelectable

table: CsvSelectable = acquire.csv.http("https://raw.githubusercontent.com/mikeAdamss/tidychef/main/tests/fixtures/csv/data-markers.csv")

anchor = table.re("Name").assert_one().label_as("Anchor Cell")
name = anchor.fill(down).is_not_blank().label_as("Name")
raw_observations = name.fill(left).is_not_blank().label_as("raw")
vehicles = anchor.fill(left).label_as("Vehicles")

preview(anchor, raw_observations, name, vehicles)

def obs_only(line: Dict[str, str]) -> str:
    """
    Returns numeric characters from the "raw" column relative to
    the column cell being populated.
    """
    v = "".join([c for c in line["raw"] if c.isnumeric()])
    return v

def data_markers_only(line: Dict[str, str]) -> str:
    """
    Returns non numeric characters from the "raw" column relative to
    the column cell being populated.
    """
    v = "".join([c for c in line["raw"] if not c.isnumeric()])
    return v

tidy_data = TidyData(
    raw_observations,
    Column.horizontal_condition("Value", obs_only),
    Column.horizontal_condition("Data Marker", data_markers_only),
    Column(name.finds_observations_directly(left)),
    Column(vehicles.finds_observations_directly(down)),
    drop=["raw"]
)
print(tidy_data)
------------------


[31m---------------------------------------------------------------------------[39m
[31mAttributeError[39m                            Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 37[39m
[32m     30[39m     v = [33m"[39m[33m"[39m.join([c [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m line[[33m"[39m[33mraw[39m[33m"[39m] [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m c.isnumeric()])
[32m     31[39m     [38;5;28;01mreturn[39;00m v
[32m     33[39m tidy_data = TidyData(
[32m     34[39m     raw_observations,
[32m     35[39m     Column.horizontal_condition([33m"[39m[33mValue[39m[33m"[39m, obs_only),
[32m     36[39m     Column.horizontal_condition([33m"[39m[33mData Marker[39m[33m"[39m, data_markers_only),
[32m---> [39m[32m37[39m     Column([43mname[49m[43m.[49m[43mfinds_observations_directly[49m(left)),
[32m     38[39m     Column(vehicles.finds_observations_directly(down)),
[32m     39[39m     drop=[[33m"[39m[33mraw[39m[33m"[39m]
[32m     40[39m )
[32m     41[39m [38;5;28mprint[39m(tidy_data)

[31mAttributeError[39m: 'CsvSelectable' object has no attribute 'finds_observations_directly'

