Traceback (most recent call last):
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 64, in single_nb_execution
    **kwargs,
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/michaeladams/.pyenv/versions/3.7.13/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/michaeladams/Library/Caches/pypoetry/virtualenvs/tidychef-jGQs3W5N-py3.7/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from tidychef.models.source.cell import Cell

# Create a simple Cell object for testing
# Note the value here is numeric!
valid_cell = Cell(x="0", y="0", value="1")

# Try it out - this will be return True (1 is numeric)
validator = NumericValidator()
print(f'Should be True: {validator(valid_cell)}')

# Now lets try a Cell with a non numeric value
invalid_cell = Cell(x="0", y="0", value="foo")
print(f'Should be False: {validator(invalid_cell)}')

# Lastly lets call .msg() on our failed validation and print it
print(validator.msg(fake_cell))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/3q/wpcx20553xv0hpsjgtq_zl_m0000gp/T/ipykernel_66027/4169935608.py[0m in [0;36m<module>[0;34m[0m
[1;32m     14[0m [0;34m[0m[0m
[1;32m     15[0m [0;31m# Lastly lets call .msg() on our failed validation and print it[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 16[0;31m [0mprint[0m[0;34m([0m[0mvalidator[0m[0;34m.[0m[0mmsg[0m[0;34m([0m[0mfake_cell[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;31mNameError[0m: name 'fake_cell' is not defined
NameError: name 'fake_cell' is not defined

